[twitter]
; To generate these:
; 1. Visit https://dev.twitter.com/apps/new and log in if needed.
; 2. Fill in the whole form, leave "Callback URL" empty. Make sure the access
; level is "Read and Write."
; 3. Copy "Consumer key" and "Consumer secret" values.
; 4. Create a new access token (if you don't have one)
; 5. Copy "Access token" and "Access token secret" values.
consumer_key        = "{{ salt['pillar.get']('twitterapi:engrishsmitelli:consumer_key') }}"
consumer_secret     = "{{ salt['pillar.get']('twitterapi:engrishsmitelli:consumer_secret') }}"
access_token        = "{{ salt['pillar.get']('twitterapi:engrishsmitelli:access_token') }}"
access_token_secret = "{{ salt['pillar.get']('twitterapi:engrishsmitelli:access_token_secret') }}"

[translation]
; An API/Subscription Key for the Translator Text API on Microsoft Azure.
; I would write a set of instructions on how to register an account and generate
; this, but it was a royal pain in the ass and odds are when somebody needs to
; do it again in four years the whole process will be completely different
; anyway.
api_key = "{{ salt['pillar.get']('azureapi:translator_engrishsmitelli:api_key') }}"

; How many times to go from the "from" language to the "to" language and back
cycles = 3

; Language of the source text, and the final output (example "en")
language_from = "en"

; Intermediate language to translate to (example "ja")
language_to = "ja"

[mysql]
; The hostname (and optionally, port) of the MySQL server.
; If socket is a string (not FALSE), server is ignored.
server = ""
socket = "/run/mysqld/mysqld.sock"

; Name of an existing twitstash database to use
database = "twitstash_smitelli"

; User name and password
username = "twitstash"
password = ""

; Name of the table where this instance should store its state data. Don't use
; backticks, etc. without escaping them. Actually, just don't use them at all.
table = "twanslationparty_engrishsmitelli"
