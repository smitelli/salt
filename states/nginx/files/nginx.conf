pid /run/nginx.pid;
user www-data;
worker_processes auto;
worker_rlimit_nofile 20000;

include /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept on;
    use epoll;
    worker_connections 4000;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    server_tokens off;
    tcp_nodelay on;
    tcp_nopush on;
    keepalive_requests 100000;
    keepalive_timeout 65;
    client_body_timeout 10;
    send_timeout 10;
    reset_timedout_connection on;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    types {
        # This probably oughta go into its own file at some point
        # Conisder https://github.com/h5bp/server-configs-nginx/blob/main/mime.types
        application/geo+json                geojson;
        application/ld+json                 jsonld;
        application/manifest+json           webmanifest;
        application/x-web-app-manifest+json webapp;
        audio/flac                          flac;
        audio/mp4                           aac f4a f4b m4a;
        audio/ogg                           oga ogg opus;
        audio/x-wav                         wav;
        font/collection                     ttc;
        font/otf                            otf;
        font/ttf                            ttf;
        font/woff                           woff;
        font/woff2                          woff2;
        image/avif                          avif avifs;
        image/bmp                           bmp;
        image/x-icon                        cur ico;
        text/cache-manifest                 appcache;
        text/markdown                       md;
        text/vcard                          vcard vcf;
        text/vnd.rim.location.xloc          xloc;
        text/vtt                            vtt;
        video/mp4                           f4p f4v m4v mp4;
    }
    default_type application/octet-stream;

    # Set up globally shared variables used by security-headers.conf snippet
    map $scheme $expect_ct_value {
        https "max-age={{ expect_ct_max_age }}, enforce";
    }

    map $scheme $strict_transport_security_value {
        https "max-age={{ strict_transport_security_max_age }}";
    }

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
